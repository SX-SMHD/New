name: Create and Auto-Merge Pull Request

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  create-and-merge-pr:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Generate token
      id: generate-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ secrets.ISSUEREPOAPP_APP_ID }}
        private-key: ${{ secrets.ISSUEREPOAPP_PRIVATE_KEY }}

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Create or update branch
      run: |
        git checkout -b update-test-md || git checkout update-test-md
        echo "Hello" >> test.md
        git add test.md
        git commit -m 'Append Hello to test.md file' || echo "No new changes to commit"

    - name: Push changes
      run: git push origin update-test-md --force
      env:
        GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}

    - name: Create or get PR number
      id: check-pr
      run: |
        sudo apt-get install -y jq  # Ensure jq is installed

        PR_RESPONSE=$(curl -s -X GET \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls?head=${{ github.repository_owner }}:update-test-md")
        
        PR_NUMBER=$(echo "$PR_RESPONSE" | jq '[.[] | select(.user.login == "github-actions[bot]")][0].number')

        if [ "$PR_NUMBER" != "null" ] && [ -n "$PR_NUMBER" ]; then
          echo "Existing PR found: #$PR_NUMBER"
        else
          echo "Creating a new PR..."
          PR_CREATE_RESPONSE=$(curl -s -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pulls \
            -d '{
                  "title": "Append Hello to test.md",
                  "head": "update-test-md",
                  "base": "main",
                  "body": "This pull request appends Hello to the test.md file."
                }')

          PR_NUMBER=$(echo "$PR_CREATE_RESPONSE" | jq '.number')

          if [ "$PR_NUMBER" == "null" ] || [ -z "$PR_NUMBER" ]; then
            echo "❌ Failed to create PR. Response: $PR_CREATE_RESPONSE"
            exit 1
          fi

          echo "✅ Created PR: #$PR_NUMBER"
        fi

        # Store PR number for the next step
        echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
        echo "::set-output name=PR_NUMBER::$PR_NUMBER"

    - name: Auto-Merge Pull Request
      run: |
        if [ -z "$PR_NUMBER" ] || [ "$PR_NUMBER" == "null" ]; then
          echo "❌ PR_NUMBER is empty. Cannot merge PR."
          exit 1
        fi

        MERGE_RESPONSE=$(curl -s -X PUT \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge" \
          -d '{
                "commit_title": "Auto-merged PR",
                "merge_method": "squash"
              }')

        echo "Merge Response: $MERGE_RESPONSE"
