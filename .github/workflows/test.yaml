name: Create test.md and Add Hello

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  create-file-pr:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --global user.name 'GitHub App Bot'
        git config --global user.email 'bot@example.com'

    - name: Create Branch
      run: |
        BRANCH_NAME="update-test-md"
        git fetch origin main
        git checkout -b $BRANCH_NAME

    - name: Create or Update test.md
      run: |
        echo "Hello" > test.md
        git add test.md
        git commit -m "Create test.md and add 'Hello'"

    - name: Push Changes
      run: |
        git push origin update-test-md --force-with-lease || (git pull --rebase origin update-test-md && git push origin update-test-md --force-with-lease)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_APP_TOKEN }}

    - name: Create Pull Request
      id: create-pr
      run: |
        PR_RESPONSE=$(curl -s -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_APP_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/pulls \
          -d '{
                "title": "Create test.md with Hello",
                "head": "update-test-md",
                "base": "main",
                "body": "This pull request creates test.md and adds Hello."
              }')
        PR_NUMBER=$(echo "$PR_RESPONSE" | jq -r '.number // empty')
        if [[ -z "$PR_NUMBER" ]]; then
          echo "❌ Failed to create PR. Response: $PR_RESPONSE"
          exit 1
        fi
        echo "✅ Created PR: #$PR_NUMBER"
        echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

    - name: Approve Pull Request
      run: |
        RESPONSE=$(curl -s -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_APP_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews" \
          -d '{
                "event": "APPROVE",
                "body": "Auto-approved by GitHub Actions"
              }')
        echo "Approval Response: $RESPONSE"

    - name: Auto-Merge PR
      run: |
        MERGE_RESPONSE=$(curl -s -X PUT \
          -H "Authorization: token ${{ secrets.GITHUB_APP_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge" \
          -d '{
                "commit_title": "Auto-merged PR",
                "merge_method": "squash"
              }')
        echo "Merge Response: $MERGE_RESPONSE"
