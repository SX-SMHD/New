name: Auto-PR & Merge

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: write
  pull-requests: write

jobs:
  auto-pr-merge:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Prevent Re-Trigger Loop
      run: |
        LAST_COMMITTER=$(git log -1 --pretty=format:'%an')
        if [[ "$LAST_COMMITTER" =~ ^(issuerepoapp bot|github-actions\[bot\])$ ]]; then
          echo "🚫 Bot committed last, skipping workflow..."
          exit 0
        fi

    - name: Configure Git
      run: |
        git config --global user.name "issuerepoapp bot"
        git config --global user.email "issuerepoapp-bot@users.noreply.github.com"

    - name: Create/Update Branch & Modify test.md
      run: |
        BRANCH="update-test-md"
        git fetch origin main
        git checkout -B $BRANCH main
        echo "Hello $(date)" > test.md
        git add test.md
        if git diff --cached --quiet; then
          echo "⚠️ No changes to commit."
          exit 0
        fi
        git commit -m "Update test.md timestamp"
        git push origin $BRANCH --force-with-lease

    - name: Find or Create PR
      id: pr
      run: |
        sudo apt-get install -y jq
        PR_NUMBER=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/pulls?state=open&head=${{ github.repository_owner }}:update-test-md" | jq -r '.[0].number // empty')
        if [[ -z "$PR_NUMBER" ]]; then
          PR_RESPONSE=$(curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"title": "Update test.md", "head": "update-test-md", "base": "main", "body": "Updating timestamp."}' \
            "https://api.github.com/repos/${{ github.repository }}/pulls")
          PR_NUMBER=$(echo "$PR_RESPONSE" | jq -r '.number // empty')
          echo "✅ Created PR #$PR_NUMBER"
        else
          echo "✅ Found existing PR #$PR_NUMBER"
        fi
        echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV

    - name: Approve PR (If Needed)
      run: |
        curl -s -X POST -H "Authorization: token ${{ secrets.GH_PAT_APPROVER }}" \
          -d '{"event": "APPROVE", "body": "Auto-approved by GitHub Actions"}' \
          "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews"

    - name: Auto-Merge PR
      run: |
        MERGE_RESPONSE=$(curl -s -X PUT -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d '{"merge_method": "squash"}' \
          "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/merge")
        echo "Merge Response: $MERGE_RESPONSE"
